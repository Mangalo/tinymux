TinyMUX 2.7:  SQL
Last Update:  April 2007
~~~~~~~~~~~~~~~~~~~~~~~~~~

1) As of the present writing, TinyMUX 2.7's SQL support only encompasses
   the inline SQL functionality that PennMUSH and TinyMUSH 3.0 have, namely
   the sql() function.

   To enable this functionality, you will need to pass --enable-inlinesql
   to the configure script.  If your MySQL is not in the default location,
   (namely, /usr/include/mysql and /usr/lib/mysql), then you will need to
   tell configure where to find the headers and libraries with the
   --with-mysql-include and --with-mysql-libs options.  For instance:

   ./configure --enable-inlinesql
               --with-mysql-include=/usr/local/mysql/include
               --with-mysql-libs=/usr/local/mysql/lib

2) Once the game has been compiled you will need to add four configuration
   options to the .conf file.  The four are listed below:

      sql_database <name of database>
      sql_server <localhost or address>
      sql_user <MySQL username>
      sql_password <MySQL password>


3) Start the game and check the log file. You should two entries like the
   following:

      SQL/CONN : Connecting: <database>@<address> as <user>
      SQL/CONN : Connected to MySQL

   You can use the sql() function to perform MySQL queries.  See 'help sql()'.


4) The SQL code enabled with --enable-inlinesql runs synchronous with the
   TinyMUX process.  That means that in the game when you use the sql()
   function to make a query, the whole game waits on the query to finish.  If
   you're on a server which is not overloaded and has good, free resources and
   where the MySQL server is running on the same machine then this should not
   be a problem as long as the MySQL server remains running.  If the server is
   overloaded and therefore slow or if the MySQL server is on a different
   machine, then there can be a delay in getting the results.  That delay will
   mean the whole game hangs while waiting.

   When using the SQL functionality bear this potential problem in mind.  You
   should test your game with the SQL functionality first before using it in a
   live environment.
