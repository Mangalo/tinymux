TinyMUX 2.7:  CHANGES
Last Update:  August 2007

Major changes that may affect performance and require softcode tweaks:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 -- Added mux_string and fixed many functions including EDIT(),
    EXTRACT(), REVERSE(), SQUISH(), WORDPOS(), and DELETE() (Issues
    14, 25, 52, 98, 100, and 232). Thanks Jake and Alierak.
 -- Added Unicode support with the database using UTF-8 and
    supporting ASCII, ISO 8859-1, and UTF-8 clients.  Earlier mail,
    comsys, and flatfiles versions are converted.
 -- NOACCENTS flag renamed to ASCII and used to force an ASCII
    encoding for clients which do not properly negotiate or
    alternatively, out of preference.
 -- UNICODE flag added to force a UTF-8 encoding for clients which
    support UTF-8 but do not negotiate it.
 -- Added CHARSET and NEW-ENVIRON telnet negotiations which may affect
    clients.
 -- Add SSL encryption support including ssl_certificate_file,
    port_ssl, ssl_certificate_key, and ssl_certificate_password
    configuration options.  This is enabled with --enable-ssl.
 -- Add Telnet option STARTTLS to support secure connections.
    This is enabled with --enable-ssl.
 -- Added infrastructure for dynamically-loadable modules.


Feature Additions:
~~~~~~~~~~~~~~~~~
 -- Support optional action list with @break.  Add corresponding
    @assert command. (Issue 36).
 -- Help files support PennMUSH-style multiple topics for each help
    entry; consecutive &FOO lines refer to the same content
    (Issue 238).  Thanks Alierak.
 -- Added LPAD(), CPAD(), and RPAD() functions to duplicate previous
    non-truncating LJUST(), CENTER(), and RJUST() functionality
    (Issue 13).  Thanks Jake.
 -- Added /delete switch to @function and allow removal of
    user-defined functions (Issue 250).  Thanks Jake.
 -- Added fifth, sort-type argument to SETINTER(), SETUNION(), and
    SETDIFF() (Issue 3).
 -- Added @comjoin, @comleave, @comon, and @comoff for use with
    channel objects.  Each evaluates to a message shown to the channel
    member at the corresponding event (Issue 9).
 -- Added TR() function to allow transforming strings according to a
    specified pattern (Issue 262). Thanks Jake.
 -- REVWORDS() now accepts multi-character input and output delimiters
    (Issue 21). Thanks Jake.
 -- Use mux_string in SCRAMBLE() and SECURE() to avoid stripping ANSI.
 -- Added PennMUSH-compatible TERMINFO() to allow softcode access to
    the client's capabilities.
 -- Separated inline SQL supprt from Firan support so that it can be
    enabled separately.
 -- Feature complete for UTF-8 string layer.
 -- Turned on private use code points for Tengwar and Klingon even
    though these code point assignments are not official.
 -- Added @eval command.
 -- Support Unicode in filenames on Unix and Win32.
 -- Allow @hook to work on exits, enter aliases, and leave aliases.
    (Issue 235)
 -- Provide CLog module interface from netmux.
 -- Pass log file sub-direction, LOGDIR, option in mux.config (and
    muxconfig.vbs) through as a command-line option.
 -- Add pOuterUnknown parameter to CreateInstance to allow aggregation
    to be used later. The proxy for marshalling appears to require it.
 -- Add moniker (%k) substitution (Issue 350).
 -- Added config option for initial parents (Issue 48).


Bug Fixes:
~~~~~~~~~
 -- INFO should show 'Patches' or 'INFO 1', but not both (Issue 236).
 -- @dolist and @trig were not passing TRACE bit through (Issue 237).
 -- Using \ as a shortcut to @emit no longer causes the beginning of
    the message to be escaped (Issue 219).  Thanks Alierak.
 -- @verb/no_name used unterminated verb_sw table (Issued 243).
    Thanks Jake.
 -- Guest objects left DARK through announcement code (Issue 244).
 -- @wall evaluated a speechmod before processing the message
    (Issue 16).  Thanks Jake.
 -- @wall's switches did not interact properly (Issue 30).  Thanks
    Jake.
 -- Corrected error messages for failed guest logins (Issue 246).
 -- @function did not strip ansi from or properly truncate
    user-defined function names. (Issue 249).  Thanks Jake.
 -- Fix typo in do_say() which left a bit-wise instead of a logical
    AND operation (Issue 245).
 -- Fix SORT(2 100) --> '100 2' bug introduced in 2.7.0.1 (Issue 251).
 -- Fix trailing padding in CENTER() (Issue 253).
 -- mid(abc,-1,2) now returns a, not ab. mid(abc,1,-2) now returns
    ab, not a.  This is the documented behavior.
 -- wordpos() did not strip ansi before counting characters.
 -- Fix signed / unsigned warning in dump_info() (Issue 276).
 -- Corrected minor typo in @comon section of help.txt. (Issue 275)
 -- Restore newline skipping in wrap(), broken in 2.7.0.2 (Issue 278).
 -- Fix potential buffer overflow in ladd() (Issue 282). Thanks Jake.
 -- Use %p printf format for pointer to avoid compiler warning about
    truncating a potentially 64-bit quantity.
 -- Restore newline skipping in wrap(), broken in 2.7.0.2 (Issue 278).
 -- Fix line-duplication bug in wrap(), broken in 2.7.0.2 (Issue 286).
 -- Fix tab expansion in wrap().
 -- Fixed memory leak in scheduler because of running out of memory.
 -- Fixed non-player object's ability to hold coins.
 -- Fixed loading of coins from flatfile (i.e., across @restart for
    memory-based) (Issue 224).
 -- Fix Firan build break in fun_trigger() (Issue 288).
 -- Fixed +glance softcode in SGP minimal database (Issue 291).
 -- Fix memory leak in @mail error code path.
 -- Fix memory leak in process_cmdent().
 -- Allow Intel's EMT64 compiler to build the sources (Issue 308).
 -- Fix 'think [search(eval=hasattr(##,foo))]' by clearing the []-ness
    from causing mux_exec() to complain about 'eval=hasattr()' not
    being a function.
 -- v3 comtitles were not being converted to v4 color code points.
 -- Fix type-punning bug in mux_fpclass() that broke when compiled
    with gcc 4.1 or later with -O2 (which turns on -fstrict-aliasing)
    (Issue 322).
 -- Fix hang in MUNGE() if given zero words (Issues 324).
 -- Fix output bug in lflags, where no space was output between the
    first two flag names. (Issue 323)
 -- Fix various @restart scenarios between SSL and non-SSL and from
    2.6 to 2.7.
 -- Rework SSL/TLS engine to use a TLS-specific context for STARTTLS,
    rather than reusing the SSLv3 context.
 -- Properly terminate uses of mux_exec().  Most of these are
    protected by EV_TOP or something else.
 -- Attempt to make modules work on OS X (Darwin).
 -- CLogFile::AppendLog() does not actually position log at end of
    existing log file. Net result is only that first two lines
    (Containing to INI/LOAD entries) are lost.
 -- ConvertToUTF8() converted code points above 0x10000 incorrectly.
 -- Allow %=<name> to support single-letter attribute names and
    document. Issue 341.


Performance Enhancements:
~~~~~~~~~~~~~~~~~~~~~~~~
 -- Help entries use less memory (specific improvements described in
    Issue 238 comments).  Thanks Alierak.
 -- MUNGE() translates results through a hash table instead of
    repeated linear searching (Issue 247).  Thanks Alierak and Ian.
 -- VMAG(), VUNIT, and SHUFFLE() only need LBUF_SIZE/2 elements
    instead of LBUF_SIZE elements.
 -- Prepending a single char to a mux_string no longer copies the
    string twice (Issue 281).
 -- Make mux_exec() not check function names that are too long to be
    valid.
 -- Prepending a single char to a mux_string no longer copies the
    string twice (Issue 281).
 -- Make parse_arglist_lite() and mux_exec() non-destructive.
 -- Make mux_exec() take a char *pdstr instead of char **dstr.
 -- Various things made const and/or consolidated.
 -- Merge fun_wrap and linewrap_general.
 -- Update sortby algorithm to minimize comparisons (Issue 22).


Cosmetic Changes:
~~~~~~~~~~~~~~~~
 -- Added Doxygen file headers (Issue 102).


Miscellaneous:
~~~~~~~~~~~~~
 -- Documented Lbufref and Regref pools in 'wizhelp @list alloc'.
    Thanks Alierak.
 -- Documented use of a single backslash as a proper shortcut to
    @emit (Issue 219).  Thanks Alierak.
 -- Removed unnecessary global pos variable from help.cpp (Issue 265).
 -- Fixed dangling reference to 'help @version' (Issue 277).
 -- Corrected documentation of E() and PI() to reflect actual
    precision (Issue 283).  Thanks Jake.
 -- Document @restart dropping SSL connections up front.
 -- Document report and move into walkdb.cpp (Issue 293).
